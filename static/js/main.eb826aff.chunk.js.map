{"version":3,"sources":["components/landingpage.jsx","components/contact.jsx","components/project.jsx","components/resume.jsx","components/main.jsx","App.js","serviceWorker.js","index.js"],"names":["LandingPage","style","width","margin","className","col","src","alt","href","rel","target","aria-hidden","Component","Contacts","fontSize","class","Projects","props","state","activeTab","this","shadow","minWidth","color","height","background","border","colored","name","onChange","tabId","setState","ripple","toggleCategories","Resume","Main","exact","path","process","component","Contact","Project","App","transparent","title","to","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.eb826aff.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Grid, Cell } from \"react-mdl\";\r\n\r\nclass LandingPage extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{ width: \"100%\", margin: \"auto\" }}>\r\n        <Grid className=\"landing-grid\">\r\n          <Cell col={12}>\r\n            <div className=\"img-row\">\r\n            <div className=\"img-column\">\r\n            <img\r\n              src=\"https://res.cloudinary.com/shawabhishek/image/upload/v1598726984/my_frnzzi.jpg\"\r\n              alt=\"avatar\"\r\n              className=\"avatar-img\"\r\n            />\r\n            </div>\r\n            <div className=\"img-column\">\r\n            <img\r\n              src=\"https://res-console.cloudinary.com/shawabhishek/thumbnails/transform/v1/image/upload//v1598770617/ZXpnaWYuY29tLXdlYnAtdG8tanBnLXJlbW92ZWJnLXByZXZpZXdfY2Z0bG03/drilldown\"\r\n              alt=\"qouat\"\r\n              className=\"quote-img\"\r\n            />\r\n            </div>\r\n            </div>\r\n            <div className=\"banner-text\">\r\n              <center>\r\n                <h1 className=\"h1-landing\">ABHISHEK SHAW</h1>\r\n              </center>\r\n              <hr />\r\n              <center>\r\n                <p>\r\n                  HTML/CSS | JavaScript | NodeJS | React | C++ | MongoDB{\" \"}\r\n                </p>\r\n              </center>\r\n\r\n              <div className=\"social-links\">\r\n                {/* LinkedIn */}\r\n                <a\r\n                  href=\"https://www.linkedin.com/in/abhishek-shaw-8a093514a/\"\r\n                  rel=\"noopener noreferrer\"\r\n                  target=\"_blank\"\r\n                >\r\n                  <i className=\"fa fa-linkedin-square\" aria-hidden=\"true\" />\r\n                </a>\r\n\r\n                {/* Github */}\r\n                <a\r\n                  href=\"https://github.com/shawabhishek\"\r\n                  rel=\"noopener noreferrer\"\r\n                  target=\"_blank\"\r\n                >\r\n                  <i className=\"fa fa-github-square\" aria-hidden=\"true\" />\r\n                </a>\r\n\r\n                {/* Instagram */}\r\n                <a\r\n                  href=\"https://www.instagram.com/__.shaw.__/?hl=en\"\r\n                  rel=\"noopener noreferrer\"\r\n                  target=\"_blank\"\r\n                >\r\n                  <i className=\"fa fa-instagram\" aria-hidden=\"true\" />\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </Cell>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LandingPage;\r\n","import React, { Component } from \"react\";\r\n\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"contacts-body\">\r\n        <link href=\"https://fonts.googleapis.com/css2?family=BioRhyme:wght@700&display=swap\" rel=\"stylesheet\"></link>\r\n        <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"></link>\r\n        <h1 style={{fontSize:\"70px\"}}>Hi, I'm Abhishek. I design & build.</h1>\r\n        <h1 style={{}}>yes, I'm a Web Developer</h1>\r\n        <i class=\"fa fa-quote-left fa-3x fa-pull-left\" aria-hidden=\"true\"></i>\r\n        <h2>about me</h2>\r\n        <p>I love programming, writing , traveling and playing football.<br></br>\r\n          I'm enthusiast learner love to learn new tech stack and <b style={{fontSize:\"20px\"}}>&lt;code&gt;</b><br></br>\r\n          Currently in B.tech 4 year.\r\n          Feel free to check me out on.....  \r\n        </p>\r\n        <div className=\"contacts-list\">\r\n         \r\n        <a href=\"#\" class=\"fa fa-facebook\"></a>\r\n        <a href=\"https://www.linkedin.com/in/abhishek-shaw-8a093514a/\" class=\"fa fa-linkedin\"></a>\r\n        <a href=\"https://www.instagram.com/__.shaw.__/?hl=en\" class=\"fa fa-instagram\"></a>\r\n        <a href=\"https://join.skype.com/invite/WYLWDi9YGJEI\" class=\"fa fa-skype\"></a>\r\n        <a href=\"https://github.com/shawabhishek\" class=\"fa fa-github\"></a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React, { Component } from \"react\";\r\nimport { Tabs,Tab,Grid,Cell,Card,CardTitle,CardText,CardActions,Button,CardMenu,IconButton} from \"react-mdl\";\r\n\r\nclass Projects extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { activeTab: 0 };\r\n  }\r\n  toggleCategories() {\r\n    if (this.state.activeTab === 0) {\r\n      return (\r\n        <div className=\"projects-grid\">\r\n          <Card shadow={5} style={{ minWidth: \"450\", margin: \"auto\" }}>\r\n            <CardTitle\r\n              style={{\r\n                color: \"#fff\",\r\n                height: \"210px\",\r\n                background:\r\n                  \"url(https://res.cloudinary.com/shawabhishek/image/upload/v1598685543/1w_mjm1ol.jpg) center / cover\",\r\n              }}\r\n            ></CardTitle>\r\n            <CardText>\r\n              This is a simple weather app that fetches data from a weather API\r\n              and user can put the location on search bar and it will fetches\r\n              weather of that location with other detail also like humidity and\r\n              chance of rain\r\n            </CardText>\r\n            <CardActions border className=\"button-bootstrap\">\r\n              <a\r\n                href=\"https://github.com/shawabhishek/weather-website\"\r\n                rel=\"noopener noreferrer\"\r\n                target=\"_blank\"\r\n              >\r\n                <Button colored>Github</Button>\r\n              </a>\r\n              <a\r\n                href=\"https://shaw-weather-website.herokuapp.com/\"\r\n                rel=\"noopener noreferrer\"\r\n                target=\"_blank\"\r\n              >\r\n                <Button colored>Live Demo</Button>\r\n              </a>\r\n            </CardActions>\r\n            <CardMenu style={{ color: \"#fff\" }}>\r\n              <IconButton name=\"share\" />\r\n            </CardMenu>\r\n          </Card>\r\n          <Card shadow={5} style={{ minWidth: \"452\", margin: \"auto\" }}>\r\n            <CardTitle\r\n              style={{\r\n                color: \"#fff\",\r\n                height: \"245px\",\r\n                background:\r\n                  \"url(https://res.cloudinary.com/shawabhishek/image/upload/v1598686210/task_ux1yrt.jpg) center / cover\",\r\n              }}\r\n            ></CardTitle>\r\n            <CardText>\r\n              This is a task manager RestAPI where user can login and create task as this a RestApi \r\n              anybody can use this API in his project. Working in Postman.\r\n            </CardText>\r\n            <CardActions border className=\"button-bootstrap\">\r\n              <a\r\n                href=\"https://github.com/shawabhishek/task-manager-api\"\r\n                rel=\"noopener noreferrer\"\r\n                target=\"_blank\"\r\n              >\r\n                <Button colored>Github</Button>\r\n              </a>\r\n              <a\r\n                href=\"http://shawabhi-task-manager.herokuapp.com/\"\r\n                rel=\"noopener noreferrer\"\r\n                target=\"_blank\"\r\n              >\r\n                <Button colored>Live Demo</Button>\r\n              </a>\r\n            </CardActions>\r\n            <CardMenu style={{ color: \"#fff\" }}>\r\n              <IconButton name=\"share\" />\r\n            </CardMenu>\r\n          </Card>\r\n          <Card shadow={5} style={{ minWidth: \"450\", margin: \"auto\" }}>\r\n            <CardTitle\r\n              style={{\r\n                color: \"#fff\",\r\n                height: \"247px\",\r\n                width: \"350px\",\r\n                background:\r\n                  \"url(https://user-images.githubusercontent.com/32011625/83231416-16115100-a1a9-11ea-90de-227061b70ee4.jpg) center / cover\",\r\n              }}\r\n            ></CardTitle>\r\n            <CardText>\r\n              This is a Phone book RestAPI where user can read, write , delete and \r\n              update its phone book record working in Insomnia.\r\n            </CardText>\r\n            <CardActions border className=\"button-bootstrap\">\r\n              <a\r\n                href=\"https://github.com/shawabhishek/phone-book-API\"\r\n                rel=\"noopener noreferrer\"\r\n                target=\"_blank\"\r\n              >\r\n                <Button colored>Github</Button>\r\n              </a>\r\n            </CardActions>\r\n            <CardMenu style={{ color: \"#fff\" }}>\r\n              <IconButton name=\"share\" />\r\n            </CardMenu>\r\n          </Card>\r\n        </div>\r\n      );\r\n    } else if (this.state.activeTab === 1) {\r\n      return (\r\n        <Card shadow={5} style={{ minWidth: \"450\", margin: \"auto\" }}>\r\n          <CardTitle\r\n            style={{\r\n              color: \"#fff\",\r\n              height: \"250px\",\r\n              background:\r\n                \"url(https://res.cloudinary.com/shawabhishek/image/upload/v1598706486/st_rx7aam.jpg) center / cover\",\r\n            }}\r\n          ></CardTitle>\r\n          <CardText>\r\n            Its a webpage made using ReactJs where user can select different\r\n            type of phone and search for it in the bar.\r\n          </CardText>\r\n          <CardActions border className=\"button-bootstrap\">\r\n            <a\r\n              href=\"https://github.com/shawabhishek/mobile-store\"\r\n              rel=\"noopener noreferrer\"\r\n              target=\"_blank\"\r\n            >\r\n              <Button colored>Github</Button>\r\n            </a>\r\n          </CardActions>\r\n          <CardMenu style={{ color: \"#fff\" }}>\r\n            <IconButton name=\"share\" />\r\n          </CardMenu>\r\n        </Card>\r\n      );\r\n    } else if (this.state.activeTab === 2) {\r\n      return (\r\n        <Card shadow={5} style={{ minWidth: \"450\", margin: \"auto\" }}>\r\n          <CardTitle\r\n            style={{\r\n              color: \"#fff\",\r\n              height: \"245px\",\r\n              background:\r\n                \"url(https://res.cloudinary.com/shawabhishek/image/upload/v1598707033/had_rggwfn.jpg) center / cover\",\r\n            }}\r\n          ></CardTitle>\r\n          <CardText>\r\n            This project is made using hadoop ecosystem which is a part Big Data \r\n            in this data of different flights are there and this program can easily do analysis \r\n            on the data and can give disered ouput. \r\n          </CardText>\r\n          <CardActions border className=\"button-bootstrap\">\r\n            <a\r\n              href=\"https://github.com/shawabhishek/Big_data_project\"\r\n              rel=\"noopener noreferrer\"\r\n              target=\"_blank\"\r\n            >\r\n              <Button colored>Github</Button>\r\n            </a>\r\n          </CardActions>\r\n          <CardMenu style={{ color: \"#fff\" }}>\r\n            <IconButton name=\"share\" />\r\n          </CardMenu>\r\n        </Card>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"projects-main\">\r\n        <Tabs\r\n          activeTab={this.state.activeTab}\r\n          onChange={(tabId) => this.setState({ activeTab: tabId })}\r\n          ripple\r\n        >\r\n          <Tab>NodeJs/RestAPI</Tab>\r\n          <Tab>React</Tab>\r\n          <Tab>Hadoop</Tab>\r\n        </Tabs>\r\n\r\n        <Grid className=\"projects-grid\">\r\n          <Cell col={12}>\r\n            <div className=\"content\">{this.toggleCategories()}</div>\r\n          </Cell>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Projects;\r\n","import React, { Component } from 'react';\r\n\r\nclass Resume extends Component{\r\n    render(){\r\n        return(\r\n            <div >\r\n            <img\r\n            src=\"https://res.cloudinary.com/shawabhishek/image/upload/v1598681601/my-cv-page-001_jiaspc.jpg\"\r\n            alt=\"resume_img\"\r\n            class=\"center2\"\r\n            />\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Resume;","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport LandingPage from \"./landingpage\";\r\nimport Contact from \"./contact\";\r\nimport Project from \"./project\";\r\nimport Resume from \"./resume\";\r\n\r\nconst Main = () => (\r\n  <Switch>\r\n    <Route exact path={process.env.PUBLIC_URL+\"/\"} component={LandingPage} />\r\n    <Route path={process.env.PUBLIC_URL+\"/contact\"} component={Contact} />\r\n    <Route path={process.env.PUBLIC_URL+\"/project\"} component={Project} />\r\n    <Route path={process.env.PUBLIC_URL+\"/resume\"} component={Resume} />\r\n  </Switch>\r\n);\r\n\r\nexport default Main;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Layout, Header, Navigation, Drawer, Content } from \"react-mdl\";\nimport Main from \"./components/main\";\nimport { Link } from \"react-router-dom\";\nclass App extends Component {\n  render() {\n    return (\n<div >\n        <Layout\n          style={{\n            background:\n              \"url(https://res.cloudinary.com/shawabhishek/image/upload/v1598766862/wal_x1u9px.jpg) center / cover\",\n          }}\n        >\n          <Header transparent title={<Link style={{ color: \"white\" ,fontSize:\"20px\"}} to=\"/\">Abhishek's Portfolio</Link>}>\n            <Navigation className=\"nav-main\">\n              <Link style={{fontSize:\"16px\"}} to={process.env.PUBLIC_URL+\"/\"}>Home</Link>\n              <Link style={{fontSize:\"16px\"}} to={process.env.PUBLIC_URL+\"/resume\"}>Resume</Link>\n              <Link style={{fontSize:\"16px\"}} to={process.env.PUBLIC_URL+\"/project\"}>Projects</Link>\n              <Link style={{fontSize:\"16px\"}} to={process.env.PUBLIC_URL+\"/contact\"}>About</Link>\n            </Navigation>\n          </Header>\n          <Drawer title={<Link style={{ color: \"black\" ,fontSize:\"20px\"}} to=\"/\">Abhishek's Portfolio</Link>}>\n            <Navigation className=\"nav-main\" style={{color:\"black\",fontSize:\"150%\"}}>\n              <Link style={{fontSize:\"16px\"}} to={process.env.PUBLIC_URL+\"/\"}>Home</Link>\n              <Link style={{fontSize:\"16px\"}} to={process.env.PUBLIC_URL+\"/resume\"}>Resume</Link>\n              <Link style={{fontSize:\"16px\"}} to={process.env.PUBLIC_URL+\"/project\"}>Projects</Link>\n              <Link style={{fontSize:\"16px\"}} to={process.env.PUBLIC_URL+\"/contact\"}>About</Link>\n            </Navigation>\n          </Drawer>\n          <Content>\n            <div className=\"page-content\" />\n            <Main />\n          </Content>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}